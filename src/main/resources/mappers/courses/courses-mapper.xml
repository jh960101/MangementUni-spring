<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.university.management.courses.mapper.CoursesMapper">

	<select id="coursesList"
		parameterType="com.university.management.courses.dto.CoursesList"
		resultType="com.university.management.courses.dto.CoursesList">

	<!-- 	select * from COURSES where STU_NO=#{STU_NO} and year=#{YEAR} and smt=#{SMT} -->

   SELECT
    c.STU_NO,
    c.YEAR,
    c.SMT,
    c.DEPT_NAME,
    c.PROF_NAME,
    c.SUB_NAME,
    c.CO_CONTENT,
    c.SUB_CODE,
    COALESCE((SELECT ROUND(
                  (SUM(CASE WHEN l.LMS_CHECK = 'Y' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)),
                  1
              ) AS AttendanceRate
              FROM UNIVERSITY.LMS l
              WHERE l.SUB_CODE = c.SUB_CODE
              GROUP BY l.SUB_CODE
             ), 0) AS AttendanceRate
FROM
    UNIVERSITY.COURSES c
WHERE
    c.STU_NO =#{STU_NO} and c.year=#{YEAR} and c.smt =#{SMT}
ORDER BY
    c.YEAR, c.SMT




	</select>


<select id="attendanceRate"
		parameterType="com.university.management.courses.dto.CoursesList"
		resultType="com.university.management.courses.dto.CoursesList">

   SELECT
    c.STU_NO,
    c.YEAR,
    c.SMT,
    c.DEPT_NAME,
    c.PROF_NAME,
    c.SUB_NAME,
    c.CO_CONTENT,
    c.SUB_CODE,
    COALESCE((SELECT ROUND(
                  (SUM(CASE WHEN l.LMS_CHECK = 'Y' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)),
                  1
              ) AS AttendanceRate
              FROM UNIVERSITY.LMS l
              WHERE l.SUB_CODE = c.SUB_CODE
              GROUP BY l.SUB_CODE
             ), 0) AS AttendanceRate
FROM
    UNIVERSITY.COURSES c
WHERE
    c.STU_NO =#{STU_NO} and c.year=#{YEAR} and c.smt =#{SMT} and c.sub_name=#{SUB_NAME}
ORDER BY
    c.YEAR, c.SMT


	</select>




	<select id="coursesSelect"
		parameterType="com.university.management.courseregistrationpage.dto.Courseregistrationpage"
		resultType="com.university.management.courses.dto.Courses">

		SELECT s.SUB_CODE,
		s.SUB_NAME,p.PROF_NAME,s.CLASS_CAP,s.CO_CONTENT,s.SMT,s.YEAR,s.SUB_POINT,s.SMT,s.YEAR,s.SUB_STATUS
		FROM
		subject s
		JOIN department d ON s.dept_code = d.dept_code
		JOIN PROFESSOR
		p ON p.PROF_NO = s.prof_no
		WHERE d.DEPT_NAME = #{DEPT_NAME}
		AND s.SMT =
		#{SMT}
		AND s.YEAR = #{YEAR}
		AND SUBSTRING(s.SUB_CODE, 8, 1) =
		#{STU_GRADE}


	</select>

	<insert id="courInsert"
		parameterType="com.university.management.courses.dto.Courses">
		INSERT INTO UNIVERSITY.COURSES (
		STU_NO,
		YEAR,
		SMT,
		DEPT_NAME,
		PROF_NAME,
		SUB_NAME,
		CO_CONTENT,
		SUB_CODE
		) VALUES (
		#{STU_NO},
		#{YEAR},
		#{SMT},
		#{DEPT_NAME},
		#{PROF_NAME},
		#{SUB_NAME},
		#{CO_CONTENT},
		#{SUB_CODE}
		)
	</insert>

	<update id="coustatusupdate" parameterType="String">

		UPDATE subject
		SET sub_status = CASE
		WHEN sub_status = 'n' THEN 'y'
		WHEN sub_status = 'y' THEN 'n'
		ELSE sub_status
		END
		WHERE sub_code = #{sub_code}

	</update>

	<delete id="courdelete" parameterType="String">

		delete from COURSES where sub_name=#{sub_name}


	</delete>


	<update id="classcapup" parameterType="String">

		UPDATE subject
		SET CLASS_CAP=CLASS_CAP+1
		WHERE SUB_NAME = #{sub_name}

	</update>

	<update id="classcapdown" parameterType="String">

		UPDATE subject
		SET CLASS_CAP=CLASS_CAP-1
		WHERE SUB_NAME = #{sub_name}

	</update>


	<select id="coursesbeforlist" parameterType="map"
		resultType="com.university.management.courses.dto.Courses">

	<!-- 	SELECT *
		FROM COURSES
		WHERE STU_NO = #{loginNo}
		AND year != #{year}

 -->


   SELECT
    c.STU_NO,
    c.YEAR,
    c.SMT,
    c.DEPT_NAME,
    c.PROF_NAME,
    c.SUB_NAME,
    c.CO_CONTENT,
    c.SUB_CODE,
    COALESCE((SELECT ROUND(
                  (SUM(CASE WHEN l.LMS_CHECK = 'Y' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)),
                  1
              ) AS AttendanceRate
              FROM UNIVERSITY.LMS l
              WHERE l.SUB_CODE = c.SUB_CODE
              GROUP BY l.SUB_CODE
             ), 0) AS AttendanceRate
FROM
    UNIVERSITY.COURSES c
WHERE
    c.STU_NO =#{loginNo} and c.year!= #{year} or c.smt !=#{smt}

order by c.year desc






	</select>





</mapper>